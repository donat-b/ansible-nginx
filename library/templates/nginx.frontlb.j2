#{{ ansible_managed }}
# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
# vi: set ft=nginx :

ssl_session_timeout 12h;
ssl_session_cache shared:SSL:30m;

# pass request scheme to backends via xff
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Proto
# https://www.maxcdn.com/blog/nginx-application-performance-optimization/#contentcaching
map $scheme $scheme_https {
    https on;
    default off;
}

{% for item in frontlb_servers %}
{% if item.lb_method is defined %}
upstream {{ item.name }} {
  {{ item.lb_method }};
  {%- for upstream in item.upstreams -%}
  server {{ upstream.address }}
        fail_timeout={{ upstream.fail_timeout | default('10') }}
        max_fails={{ upstream.max_fails | default('1') }}
        weight={{ upstream.weight | default('1') }}
        {{ upstream.down | default(0) | ternary('down', '') }}
        {{ upstream.backup | default(0) | ternary('backup', '') }}
        ;
  {%- endfor -%}
}
{% endif %}
{% endfor %}

{% for lb_site in frontlb_servers %}

server {
    server_name {{ lb_site.public_name | default(lb_site.server_name) }}
      {{ lb_site.aliases | default([]) | join(" ") }};

    access_log {{ nginx_log_path }}/{{ lb_site.name }}.access.log combined_upstream buffer=4k flush=60s;
    error_log {{ nginx_log_path }}/{{ lb_site.name }}.error.log;

    client_max_body_size {{ lb_site.client_max_body_size | default('2m') }};

    {% if lb_site.tls is defined or lb_site.certbot is defined and lb_site.certbot %}
      listen {{ lb_site.https_port | default(nginx_https_port) }} ssl;

      ssl_certificate      '{{ nginx_tls_path }}/{{ lb_site.server_name }}/fullchain.pem';
      ssl_certificate_key  '{{ nginx_tls_path }}/{{ lb_site.server_name }}/privkey.pem';

      ssl_dhparam '{{ nginx_dhparam_path }}';

      add_header Strict-Transport-Security max-age=15768000;
    {% else %}
      listen {{ nginx_http_port }};
    {% endif %}

    gzip_proxied any;

    {% if lb_site.redirect_to_https is defined %}
      location / {
        location /.well-known/acme-challenge/ {
          add_header Content-Type text/plain;
          alias '{{ nginx_acme_path }}.well-known/acme-challenge/';
        }

        return 307 'https://{{ lb_site.public_name | default(lb_site.server_name) }}/';
      }
    {% elif lb_site.redirect is defined %}
      location {{ lb_site.location | default('/') }} {
        return 302 '{{ lb_site.redirect }}';
      }
    {% elif lb_site.redirect_permanent is defined %}
      location {{ lb_site.location | default('/') }} {
        return 301 '{{ lb_site.redirect_permanent }}';
      }
    {% else %}
      location {{ lb_site.location | default('/') }} {
        include proxy_params;
        {% if lb_site.local_name is defined %}
        proxy_set_header Host {{ lb_site.local_name }};
        {% endif %}
        proxy_pass http://{{ lb_site.name }}{{ lb_site.local_path | default('') }};
      }
    {% endif %}

    {% if lb_site.custom_rules is defined %}
    {{ lb_site.custom_rules }}
    {% endif %}

{% if lb_site.allow_only is defined %}
  {% for host in lb_site.allow_only %}
    allow {{ host }};
  {% endfor %}
  deny all;
{% endif %}
}

{% endfor %}
