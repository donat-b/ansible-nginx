---
# vi: set ft=ansible :

- name: '{{ title }}: disable server tokens'
  lineinfile:
    dest:         '{{ nginx_etc_path }}/nginx.conf'
    state:        'present'
    create:       'no'
    insertafter:  '^http {$'
    regexp:       "\t?#? ?server_tokens .*$"
    line:         "\tserver_tokens off;"

- name: '{{ title }}: ensure directory for certificates exists'
  file:
    path: '{{ nginx_ssl_path }}'
    state: directory

- name: '{{ title }}: copy SSL certificate'
  copy:
    content: '{{ item.ssl.cert }}'
    dest: '{{ nginx_ssl_certificate_path }}'
  notify: nginx reload
  when: item.ssl is defined

- name: '{{ title }}: copy SSL key'
  copy:
    content: '{{ item.ssl.key }}'
    dest: '{{ nginx_ssl_key_path }}'
  notify: nginx reload
  when: item.ssl is defined

- name: '{{ title }}: install server config'
  template:
    src: 'library/templates/nginx.{{ item.name }}.j2'
    dest: '{{ nginx_etc_path }}/conf.d/{{ item.name }}.conf'
    mode: '0640'
    owner: 'root'
    group: '{{ nginx_user }}'
    backup: 'yes'
  notify: nginx reload

- name: '{{ title }}: remove old challenge files'
  file:
    path: '{{ nginx_ssl_acme_path }}'
    state: 'absent'
  tags: nginx_acme

- name: '{{ title }}: ensure directory for challenges exists'
  file:
    path: '{{ nginx_ssl_acme_path }}'
    state: 'directory'
  tags: nginx_acme

- name: '{{ title }}: copy ACME challenge'
  copy:
    content: '{{ item.acme_signature }}'
    dest: '/var/lib/acme-challenge/{{ item.acme_signature | splitext | first }}'
  when: item.acme_signature is defined
  tags: nginx_acme

- name: '{{ title }}: copy htpasswd file'
  htpasswd:
    path: '{{ nginx_htpasswd_path }}'
    name: '{{ user.name }}'
    password: '{{ user.pass }}'
    owner: 'root'
    group: 'www-data'
    mode: '0644'
  with_items: '{{ item.auth | default([]) }}'
  loop_control:
    loop_var: user
